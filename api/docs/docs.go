// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "post": {
                "description": "Generates the system access token and return an object containing the system access token and the user ID.\nUse the token generated at login to run the other API endpoints through Authorization Bearer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login"
                ],
                "summary": "Generates the system access token.",
                "parameters": [
                    {
                        "description": "Enter only the user's email and password.",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.DataAuthentication"
                        }
                    },
                    "400": {
                        "description": "Error: Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/publications": {
            "get": {
                "description": "ListMyAndFollowPublications lists the publications of the logged in user and the publications they follow\nand returns a list containing the posts of the logged in user and the posts of whom he follows or an error.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "publications"
                ],
                "summary": "ListMyAndFollowPublications lists the publications of the logged in user and the publications they follow.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the content: Bearer and your access token.",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Publication"
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "CreatePublication create a publication and returns the publication created or an error.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "publications"
                ],
                "summary": "CreatePublication create a publication.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the content: Bearer and your access token.",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Enter only the title and content of the publication.",
                        "name": "publication",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Publication"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.Publication"
                        }
                    },
                    "400": {
                        "description": "Error: Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/publications/user/{userId}": {
            "get": {
                "description": "ListPublicationsByUserId lists a user's publications\nand returns a list of publications or an error.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "publications"
                ],
                "summary": "ListPublicationsByUserId lists a user's publications.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the content: Bearer and your access token.",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success with no content"
                    },
                    "400": {
                        "description": "Error: Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Error: Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/publications/{publicationId}": {
            "get": {
                "description": "FindPublicationById search for a publication by the given ID\nand returns the publication or an error if unable to create the publication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "publications"
                ],
                "summary": "FindPublicationById search for a publication by the given ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the content: Bearer and your access token.",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Publication ID",
                        "name": "publicationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.Publication"
                        }
                    },
                    "400": {
                        "description": "Error: Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Error: Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "UpdatePublicationById updates a publication by the given ID\nand returns an error if unable to update the publication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "publications"
                ],
                "summary": "UpdatePublicationById updates a publication by the given ID..",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the content: Bearer and your access token.",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Publication ID",
                        "name": "publicationId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Enter only the title and content of the publication.",
                        "name": "publication",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Publication"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success with no content"
                    },
                    "400": {
                        "description": "Error: Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Error: Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "DeletePublicationById deletes a publication by the given ID\nand returns an error if unable to delete the publication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "publications"
                ],
                "summary": "DeletePublicationById deletes a publication by the given ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the content: Bearer and your access token.",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Publication ID",
                        "name": "publicationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success with no content"
                    },
                    "400": {
                        "description": "Error: Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Error: Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/publications/{publicationId}/like": {
            "post": {
                "description": "LikePublicationById likes a publication by the given ID\nand returns an error if unable to like the publication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "publications"
                ],
                "summary": "LikePublicationById likes a publication by the given ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the content: Bearer and your access token.",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Publication ID",
                        "name": "publicationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success with no content"
                    },
                    "400": {
                        "description": "Error: Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/publications/{publicationId}/unlike": {
            "post": {
                "description": "UnlikePublicationById unlike a publication by the given ID\nand returns an error if unable to unlike the publication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "publications"
                ],
                "summary": "UnlikePublicationById unlike a publication by the given ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the content: Bearer and your access token.",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Publication ID",
                        "name": "publicationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success with no content"
                    },
                    "400": {
                        "description": "Error: Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "ListUsersByFilter list users by a filter and returns the list of users found or an error.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "ListUsersByFilter list users by a filter.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the content: Bearer and your access token.",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name or nick of user.",
                        "name": "user",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.User"
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "CreateUser create a user and return the user created.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "CreateUser create a user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the content: Bearer and your access token.",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": " ",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Error: Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "description": "FindUserById search for a user by the given ID and return a user or an error.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "FindUserById search for a user by the given ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the content: Bearer and your access token.",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID.",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Error: Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Error: Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "UpdateUserById updates a user by the given ID and returns an error if unable to update the user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "UpdateUserById updates a user by the given ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the content: Bearer and your access token.",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID.",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success with no content"
                    },
                    "400": {
                        "description": "Error: Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Error: Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "DeleteUserById delete a user by the given ID and returns an error if unable to delete the user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "DeleteUserById delete a user by the given ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the content: Bearer and your access token.",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID.",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success with no content"
                    },
                    "400": {
                        "description": "Error: Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Error: Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{userId}/follow": {
            "post": {
                "description": "FollowUserById follows a user by the given ID and returns an error if unable to follow the user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "FollowUserById follows a user by the given ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the content: Bearer and your access token.",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID.",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success with no content"
                    },
                    "400": {
                        "description": "Error: Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Error: Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{userId}/followers": {
            "get": {
                "description": "ListFollowersByFollowedUserId lists a user's followers and returns a list of followers or an error.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "ListFollowersByFollowedUserId lists a user's followers.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the content: Bearer and your access token.",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID.",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{userId}/list-followed": {
            "get": {
                "description": "ListFollowedByFollowerId lists people the user follows and returns a list of people the user follows or an error.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "ListFollowedByFollowerId lists people the user follows.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the content: Bearer and your access token.",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID.",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{userId}/unfollow": {
            "post": {
                "description": "UnfollowUserById unfollow a user by the given ID and returns an error if unable to unfollow the user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "UnfollowUserById unfollow a user by the given ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the content: Bearer and your access token.",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID.",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success with no content"
                    },
                    "400": {
                        "description": "Error: Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Error: Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{userId}/update-password": {
            "post": {
                "description": "UpdatePasswordByUserId updates the user's password by the given ID and returns an error if unable to update the password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "UpdatePasswordByUserId updates the user's password by the given ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the content: Bearer and your access token.",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID.",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The current and new password of user.",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Password"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success with no content"
                    },
                    "400": {
                        "description": "Error: Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Error: Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.DataAuthentication": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "model.Password": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "string"
                },
                "new": {
                    "type": "string"
                }
            }
        },
        "model.Publication": {
            "type": "object",
            "properties": {
                "authorId": {
                    "type": "integer"
                },
                "authorNick": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "likes": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nick": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:5000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "DevBook API",
	Description:      "API responsible for CRUD and DevBook social network authentication.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
